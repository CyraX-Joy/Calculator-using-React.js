{"version":3,"sources":["App.js","index.js"],"names":["App","useState","expression","setExpression","oldExpression","setOldExpression","prev","setPrev","numerics","Set","operators","buttons","evaluateExpression","evaluation","eval","String","putNumerics","value","putOperator","slice","putDelete","length","handleKeyup","event","console","log","key","has","className","tabIndex","onKeyUp","style","width","height","background","display","flexDirection","justifyContent","alignItems","border","borderRadius","paddingLeft","color","borderBottom","paddingRight","overflow","flexWrap","padding","map","buttonValue","idx","margin","boxShadow","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g1BAEA,SAASA,MAGP,cAAkCC,oDAAS,IAA3C,wLAAKC,WAAL,cAAiBC,cAAjB,cACA,WAAwCF,oDAAS,IAAjD,yLAAKG,cAAL,cAAoBC,iBAApB,cACA,WAAsBJ,oDAAS,OAA/B,yLAAKK,KAAL,cAAWC,QAAX,cAGIC,SAAW,IAAIC,IAAI,eACnBC,UAAY,IAAID,IAAI,WAEpBE,QAAU,CAAC,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE3GC,mBAAqB,SAArBA,qBACF,IAAIC,WAAaC,KAAKZ,YACtBG,iBAAiBH,WAAa,KAC9BC,cAAcY,OAAOF,aACrBN,QAAQ,QAENS,YAAc,SAASC,GACd,OAARX,MACDD,iBAAiB,SAAWH,YAC5BC,cAAcc,IAEdd,cAAcD,WAAae,GAE7BV,QAAQ,QAENW,YAAc,SAASD,GAEvBd,cADS,MAARG,KACaJ,WAAae,EAEbf,WAAWiB,MAAM,GAAG,GAAKF,GAEzCV,QAAQ,OAENa,UAAY,WACXlB,WAAWmB,QAAQ,GACpBlB,cAAcD,WAAWiB,MAAM,GAAG,IAEpCZ,QAAQ,QAGNe,YAAc,SAASC,GACzBC,QAAQC,IAAIF,EAAMG,KACD,cAAdH,EAAMG,IACPN,YACQZ,SAASmB,IAAIJ,EAAMG,KAC3BV,YAAYO,EAAMG,KACVhB,UAAUiB,IAAIJ,EAAMG,KAC5BR,YAAYK,EAAMG,KACI,UAAdH,EAAMG,KAAiC,MAAdH,EAAMG,KACvCd,sBAKJ,OACE,kEAAKgB,UAAU,MAAMC,SAAU,EAAGC,QAASR,YAA3C,SACE,mEAAKS,MAAO,CACVC,MAAO,OACPC,OAAQ,QACRC,WAAY,gBACZC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,UAPd,UASE,kEAAKP,MAAO,CACVC,MAAO,QACPE,WAAY,OACZK,OAAQ,kBACRC,aAAc,OACdC,YAAa,OACbN,QAAS,OACTE,eAAgB,UAPlB,SASE,iEAAIN,MAAO,CACTW,MAAO,gBACPC,aAAc,oBAFhB,4BAMF,mEAAKZ,MAAO,CACVC,MAAO,QACPE,WAAY,OACZC,QAAS,OACTC,cAAe,SACfE,WAAY,WACZC,OAAQ,kBACRC,aAAc,OACdI,aAAc,OACdC,SAAU,SACVH,MAAO,QAVT,UAYE,0EAAKtC,gBACL,0EAAKF,gBAEP,kEAAK6B,MAAO,CACVC,MAAO,QACPE,WAAY,OACZC,QAAS,OACTC,cAAe,MACfU,SAAU,OACVT,eAAgB,eAChBE,OAAQ,kBACRC,aAAc,OACdO,QAAS,OATX,SAWGpC,QAAQqC,KAAI,SAAUC,EAAaC,GAChC,OACE,qEACEnB,MAAO,CACLC,MAAO,OACPe,QAAS,MACTI,OAAQ,MACRC,UAAW,gBAEbC,QAAS,WACY,MAAfJ,EACF7B,YACSZ,SAASmB,IAAIsB,GACtBjC,YAAYiC,GACHvC,UAAUiB,IAAIsB,GACvB/B,YAAY+B,GACa,MAAhBA,GACTrC,sBAfN,SAkBEqC,cAUHjD,2B,6BC7If,iEAKAsD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.5945f155.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nfunction App() {\n\n  // This are useState in React \n  let [expression, setExpression] = useState(\"\");\n  let [oldExpression, setOldExpression] = useState(\"\");\n  let [prev, setPrev] = useState(\"ANS\");\n\n  // Set in Javascript \n  let numerics = new Set(\".0123456789\");\n  let operators = new Set(\"+-*/%()\");\n  //This is used to make buttons\n  let buttons = ['(', ')', '%', 'AC', '7', '8', '9', '/', '4', '5', '6', '*', '3', '2', '1', '-', '0', '.', '=', '+'];\n  \n  let evaluateExpression = function() {\n    let evaluation = eval(expression);\n    setOldExpression(expression + \"=\");\n    setExpression(String(evaluation));\n    setPrev(\"ANS\");\n  }\n  let putNumerics = function(value) {\n    if(prev == \"ANS\"){\n      setOldExpression(\"Ans = \" + expression);\n      setExpression(value);\n    }else{\n      setExpression(expression + value);\n    }\n    setPrev(\"NUM\");\n  }\n  let putOperator = function(value) {\n    if(prev != \"OP\"){\n      setExpression(expression + value);\n    }else{\n      setExpression(expression.slice(0,-1) + value);\n    }\n    setPrev(\"OP\");\n  }\n  let putDelete = function(){\n    if(expression.length>=1){\n      setExpression(expression.slice(0,-1));\n    }\n    setPrev(\"DEL\");\n  }\n  //Used to Handle any keypress event\n  let handleKeyup = function(event){\n    console.log(event.key);\n    if(event.key === \"Backspace\"){\n      putDelete();\n    } else if(numerics.has(event.key)){ \n      putNumerics(event.key);\n    } else if(operators.has(event.key)){\n      putOperator(event.key);\n    } else if(event.key === \"Enter\" || event.key === \"=\"){\n      evaluateExpression();\n    }\n  }\n\n  // We will return this which will be received and rendered by index.js\n  return (\n    <div className=\"App\" tabIndex={0} onKeyUp={handleKeyup}>\n      <div style={{\n        width: '100%',\n        height: '100vh',\n        background: 'darkturquoise',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}>\n        <div style={{\n          width: '400px',\n          background: '#fff',\n          border: '3px inset black',\n          borderRadius: '10px',\n          paddingLeft: '10px',\n          display: 'flex',\n          justifyContent: 'center'\n        }}>\n          <h1 style={{\n            color: 'darkturquoise',\n            borderBottom: '5px dotted black'\n          }}> CALCULATOR </h1>\n        </div>\n\n        <div style={{\n          width: '400px',\n          background: '#fff',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-end',\n          border: '3px inset black',\n          borderRadius: '10px',\n          paddingRight: '10px',\n          overflow: \"hidden\",\n          color: '#555'\n        }}>\n          <h6>{oldExpression}</h6>\n          <h2>{expression}</h2>\n        </div>\n        <div style={{\n          width: '400px',\n          background: '#fff',\n          display: 'flex',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          justifyContent: 'space-around',\n          border: '3px inset black',\n          borderRadius: '10px',\n          padding: '5px'\n        }}>\n          {buttons.map(function (buttonValue, idx) {\n              return (\n                <button\n                  style={{\n                    width: \"90px\",\n                    padding: \"5px\",\n                    margin: \"5px\",\n                    boxShadow: \"2px 3px #999\"\n                  }}\n                  onClick={function () {\n                    if (buttonValue == \"AC\") {\n                      putDelete();\n                    } else if (numerics.has(buttonValue)) {\n                      putNumerics(buttonValue);\n                    } else if (operators.has(buttonValue)) {\n                      putOperator(buttonValue);\n                    } else if (buttonValue === \"=\") {\n                      evaluateExpression();\n                    }\n                  }}\n                >{buttonValue}</button>\n              );\n            })\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}